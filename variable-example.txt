# Case 1 - Without variable

# vi main.tf

provider "aws" {
   region = "ap-south-1"
}

resource "aws_instance" "new" {
  ami           = "ami-0597375488017747e" # ap-south-1
  instance_type = "t2.micro"
tags = {
   Name = "New"
   Env  = "Testing"
}
}

resource "aws_instance" "old" {
  ami           = "ami-0597375488017747e" # ap-south-1
  instance_type = "t2.micro"
tags = {
   Name = "Old"
   Env  = "Dev"
}
}

# Case 2 - Defining variable in resouirce file
# vi main.tf

provider "aws" {
   region = "ap-south-1"
}

variable "instancetype" {
   default = "t2.micro"
}

variable "image" {
   default = "ami-01a4f99c4ac11b03c"
}

resource "aws_instance" "new" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "New"
   Env  = "Testing"
}
}

resource "aws_instance" "old" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "Old"
   Env  = "Dev"
}
}

# If we want to change in infra such as instance type, then only need to change variable value.
# Case 3 - Defining variable in separate file

# vi variable.tf  (filename can be anything but .tf extention is a must)

variable "instancetype" {
   default = "t2.micro"
}

variable "image" {
   default = "ami-01a4f99c4ac11b03c"
}

# vi main.tf
resource "aws_instance" "new" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "New"
   Env  = "Testing"
}
}

resource "aws_instance" "old" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "Old"
   Env  = "Dev"
}
}

# Case 4 - If you want to supply variable value in terminal, then remove default value in variable definition.

# vi variable.tf  

variable "instancetype" {
}

variable "image" {
}

# main.tf remain the same.

# Case 5 - Overwriting default variable values, define values in "terraform.tfvars" file.

# vi variable.tf  

variable "instancetype" {
   default = "t2.micro"
}

variable "image" {
   default = "ami-01a4f99c4ac11b03c"
}

# vi main.tf
resource "aws_instance" "new" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "New"
   Env  = "Testing"
}
}

resource "aws_instance" "old" {
  ami           = var.image         # ap-south-1
  instance_type = var.instancetype

tags = {
   Name = "Old"
   Env  = "Dev"
}
}

# vi terraform.tfvars

instancetype = "t2.micro"
image = "ami-0597375488017747e"

# Case 6 - Terraform reads only "terraform.tfvars" file automatically if we change file name then it will not read it.
# For example if we rename terraform.tfvars to demo.tfvars then terraform does not read this file automatically.
# To make terraform read this file use command line as below-

# terraform apply -var-file="demo.tfvars"

If you want terraform read this file automatically then rename this file as "demo.auto.tfvars"

# Case 7 - Define variable value in command line usng "-var" option

terraform apply -var="instancetype=t2.nano" -var="image=ami-01a4f99c4ac11b03c"

# Case 8 - Defining variables as environment variable
# export TF_VAR_instancetype=t2.nano
# export TF_VAR_image=ami-01a4f99c4ac11b03c



